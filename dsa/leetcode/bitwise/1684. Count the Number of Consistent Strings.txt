1684. Count the Number of Consistent Strings

You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.

Return the number of consistent strings in the array words.

 

Example 1:

Input: allowed = "ab", words = ["ad","bd","aaab","baa","badab"]
Output: 2
Explanation: Strings "aaab" and "baa" are consistent since they only contain characters 'a' and 'b'.
Example 2:

Input: allowed = "abc", words = ["a","b","c","ab","ac","bc","abc"]
Output: 7
Explanation: All strings are consistent.
Example 3:

Input: allowed = "cad", words = ["cc","acd","b","ba","bac","bad","ac","d"]
Output: 4
Explanation: Strings "cc", "acd", "ac", and "d" are consistent.


======================================================================================================
class Solution {
public:
    int countConsistentStrings(string a, vector<string>& w) {
        unordered_map<char,int>um;
        for(auto x:a){
            um[x]++;
        }
        int t =0;
        
        for(int i =0;i<w.size();i++){
            string s =w[i];
            bool flag = true;
            for(int j =0; j<s.size();j++){
                if(um[w[i][j]]==0){
              flag = false;
                }
            }
            if(flag) t++;
                
    }
        
        
        return t;
    
    }
};
