17. Letter Combinations of a Phone Number

Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.

A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.



 

Example 1:

Input: digits = "23"
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]
Example 2:

Input: digits = ""
Output: []
Example 3:

Input: digits = "2"
Output: ["a","b","c"]

======================================================================================================
class Solution {
public:
   vector<string> mappings = {"abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"}, ans;  
    vector<string> letterCombinations(string digits) {
   if(digits == "") return ans;         // no combinations formed without any digits
	helper(digits, 0, "");              
	return ans;
        
    }
    
    void helper(string digits ,int i, string temp)
    {
        if(i==digits.size())
        {
            ans.push_back(temp);
            return;
        }
        
        for (auto x: mappings[digits[i] - '2'])
        {
            helper(digits,i+1, temp+x);
        }
        
        
    }
};